@model BookStore.Models.Book

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@Model.VolumeInfo.Title</title>

    <style>
        body {
            background-color: #f7f3f1;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #5b3a29;
            color: white;
            padding: 10px 20px;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .header-title {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .nav-buttons {
            display: flex;
            gap: 10px;
            margin-right: 30px;
        }

        .nav-button {
            background-color: #8b5a2b;
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            border-radius: 5px;
            font-size: 14px;
        }

            .nav-button:hover {
                background-color: #6b4724;
            }

        .book-details {
            text-align: center;
            padding: 100px 20px 20px; /* Padding accounts for fixed header */
        }

        .book-image {
            width: 200px;
            height: auto;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .book-title {
            font-size: 2rem;
            font-weight: bold;
            color: #5b3a29;
            margin-bottom: 10px;
        }

        .book-author {
            color: #8b5a2b;
            font-size: 1.1rem;
            margin-bottom: 10px;
        }

        .book-description {
            color: #5b3a29;
            font-size: 1rem;
            margin: 15px 0;
        }

        .book-price {
            color: #5b3a2b;
            font-size: 1.2rem;
            font-weight: bold;
            margin: 10px 0;
        }

        .add-to-cart {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #5b3a29;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .add-to-cart:hover {
                background-color: #8b5a2b;
            }
    </style>
</head>
<body>
    <!-- Floating Navigation Header -->
    <div class="header">
        <div class="header-title">Book Details</div>
        <div class="nav-buttons">
            <a href="/Home" class="nav-button">Home</a>
            <a href="/Cart" class="nav-button">Cart</a>
        </div>
    </div>

    <!-- Book Details Section -->
    <div class="book-details">
        <img class="book-image" src="@Model.VolumeInfo.ImageLinks?.Thumbnail" alt="@Model.VolumeInfo.Title" />
        <div class="book-title">@Model.VolumeInfo.Title</div>
        <p class="book-author">By: @string.Join(", ", Model.VolumeInfo.Authors ?? new[] { "Unknown Author" })</p>
        <p class="book-description">@Model.VolumeInfo.Description</p>
        @if (Model.SaleInfo?.ListPrice != null)
        {
            <p class="book-price">Price: @Model.SaleInfo.ListPrice.Amount @Model.SaleInfo.ListPrice.CurrencyCode</p>
        }
        else
        {
            <p class="book-price">Price: Not Available</p>
        }

        <!-- Add to Cart Button -->
        <form method="post" action="/Cart/AddToCart" onsubmit="return addToCart(event, this);">
            <input type="hidden" name="bookId" value="@Model.Id" />
            <input type="hidden" name="title" value="@Model.VolumeInfo.Title" />
            <input type="hidden" name="price" value="@Model.SaleInfo?.ListPrice?.Amount ?? 0" />
            <button type="submit" class="add-to-cart">Add to Cart</button>
        </form>
    </div>

    <script>
        function addToCart(event, form) {
            event.preventDefault();
            const formData = new FormData(form);

            fetch('/Cart/AddToCart', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        alert("Item added to cart!");
                    } else {
                        alert("Failed to add item to cart.");
                    }
                })
                .catch(error => {
                    console.error("Error adding item to cart:", error);
                    alert("An error occurred while adding the item to cart.");
                });
        }
    </script>
</body>
</html>
