@model IEnumerable<BookStore.Models.Book>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Book Store - Explore</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f3f1;
            margin: 0;
            padding: 0;
        }

        .header {
            position: fixed;
            top: 0;
            width: 100%;
            background-color: #5b3a29;
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 20px;
            font-size: 24px;
            height: 60px;
            z-index: 1000;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .header-title {
            flex: 1;
            text-align: center;
        }

        .nav-buttons {
            display: flex;
            gap: 10px;
            margin-right: 30px;
        }

        .nav-button {
            background-color: #8b5a2b;
            color: white;
            padding: 8px 12px;
            border-radius: 5px;
            text-decoration: none;
            font-size: 14px;
            white-space: nowrap;
        }

            .nav-button:hover {
                background-color: #d6a374;
            }

        .search-bar {
            margin: 90px auto 10px auto;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .search-input {
            padding: 10px;
            font-size: 16px;
            width: 300px;
            border-radius: 5px;
            border: 1px solid #8b5a2b;
            margin-right: 10px;
        }

        .search-button {
            padding: 10px 20px;
            background-color: #5b3a29;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

            .search-button:hover {
                background-color: #8b5a2b;
            }

        .book-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            padding: 10px 20px;
        }

        .book-card {
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            position: relative; /* Necessary for the info box to align correctly */
        }

            .book-card img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 5px;
                margin-bottom: 10px;
                cursor: pointer;
            }

        .book-title {
            font-size: 16px;
            font-weight: bold;
            color: #5b3a29;
            margin: 10px 0;
        }

        .book-price {
            font-size: 14px;
            color: #8b5a2b;
            margin-bottom: 10px;
        }

        .card-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: auto;
        }

        .card-button {
            background-color: #5b3a29;
            color: white;
            padding: 6px 10px;
            font-size: 14px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            flex: 1;
            margin: 0 5px;
        }

            .card-button:hover {
                background-color: #8b5a2b;
            }

        .info-box {
            display: none;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 250px;
            background-color: #fff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            padding: 10px;
            text-align: left;
            font-size: 14px;
            color: #333;
            z-index: 10;
        }

        .info-box p {
            margin: 5px 0;
        }

        @@keyframes fadeOut {
            from {
                opacity: 1;
            }
            to {
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <div class="header-title">The Book Shop</div>
        <div class="nav-buttons">
            <a href="/Home" class="nav-button">Home</a>
            <a href="/Cart" class="nav-button">Cart</a>
        </div>
    </div>

    <!-- Search Bar -->
    <div class="search-bar">
        <form method="get" action="/Home/Index">
            <input type="text" name="query" class="search-input" placeholder="Search for books..." />
            <button type="submit" class="search-button">Search</button>
        </form>
    </div>

    <!-- Book Grid -->
    <div class="book-grid">
        @foreach (var book in Model)
        {
            if (book.SaleInfo?.ListPrice != null && book.SaleInfo.ListPrice.Amount > 0)
            {
                <div class="book-card">
                    <img src="@book.VolumeInfo.ImageLinks?.Thumbnail" alt="@book.VolumeInfo.Title" onclick="showInfoBox(this)" />
                    <div class="info-box">
                        <p><strong>Title:</strong> @book.VolumeInfo.Title</p>
                        <p><strong>Author(s):</strong> @string.Join(", ", book.VolumeInfo.Authors ?? new[] { "Unknown" })</p>
                        <p><strong>Published:</strong> @book.VolumeInfo.PublishedDate</p>
                    </div>
                    <div class="book-title">@book.VolumeInfo.Title</div>
                    <div class="book-price">Price: @book.SaleInfo.ListPrice.Amount @book.SaleInfo.ListPrice.CurrencyCode</div>

                    <div class="card-buttons">
                        <!-- Add button stays on the same page -->
                        <form method="post" action="/Cart/AddToCart" onsubmit="return addToCart(event, this);">
                            <input type="hidden" name="bookId" value="@book.Id" />
                            <input type="hidden" name="title" value="@book.VolumeInfo.Title" />
                            <input type="hidden" name="price" value="@book.SaleInfo.ListPrice.Amount" />
                            <button type="submit" class="card-button">Add</button>
                        </form>
                        <a href="@Url.Action("Details", "Home", new { id = book.Id })" class="card-button">Details</a>
                    </div>
                </div>
            }
        }
    </div>

    <script>
        function showInfoBox(imgElement) {
            const infoBox = imgElement.nextElementSibling;
            const cardRect = imgElement.getBoundingClientRect();
            const windowWidth = window.innerWidth;

            // Check if the card is near the right edge
            if (cardRect.right + 260 > windowWidth) { // 260 is the width of the info-box + some margin
                infoBox.style.left = '-260px'; // Position to the left
            } else {
                infoBox.style.left = '105%'; // Position to the right
            }

            infoBox.style.display = "block";

            setTimeout(() => {
                infoBox.style.animation = "fadeOut 1s";
                infoBox.style.opacity = 0;
                setTimeout(() => {
                    infoBox.style.display = "none";
                    infoBox.style.animation = "";
                    infoBox.style.opacity = 1;
                }, 1000);
            }, 2000);
        }

        function addToCart(event, form) {
            event.preventDefault();
            const formData = new FormData(form);

            fetch('/Cart/AddToCart', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        alert("Item added to cart!");
                    } else {
                        alert("Failed to add item to cart.");
                    }
                })
                .catch(error => {
                    console.error("Error adding item to cart:", error);
                    alert("An error occurred while adding the item to cart.");
                });
        }
    </script>
</body>
</html>
